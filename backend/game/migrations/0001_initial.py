# Generated by Django 5.1.5 on 2025-01-25 08:55

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timer_seconds', models.IntegerField(default=30)),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('nickname', models.CharField(max_length=250)),
                ('order', models.IntegerField(null=True)),
                ('jersey_no', models.IntegerField(default=0)),
                ('position', models.CharField(choices=[('P', 'Pitcher'), ('1B', 'First Base'), ('2B', 'Second Base'), ('3B', 'Third Base'), ('C', 'Catcher'), ('LF', 'Left Field'), ('CF', 'Center Field'), ('RF', 'Right Field'), ('DH', 'Designated Hitter')], max_length=2, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True)),
                ('difficulty', models.CharField(choices=[('SG', 'Single'), ('DB', 'Double'), ('TP', 'Triple'), ('HR', 'Home run')], default='SG', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Inning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(validators=[django.core.validators.MaxValueValidator(25), django.core.validators.MinValueValidator(1)])),
                ('hits_team1', models.IntegerField(default=0)),
                ('hits_team2', models.IntegerField(default=0)),
                ('outs_team1', models.IntegerField(default=0)),
                ('outs_team2', models.IntegerField(default=0)),
                ('careers_team1', models.IntegerField(default=0)),
                ('careers_team2', models.IntegerField(default=0)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='innings', to='game.game')),
            ],
        ),
        migrations.CreateModel(
            name='GameEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('H1', 'Hit'), ('H2', 'Double'), ('H3', 'Triple'), ('H4', 'Home run'), ('OUT', 'Out')], max_length=3)),
                ('inning', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='game.inning')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='game.member')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=250)),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='game.question')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionPack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pack', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.pack')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.question')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='question_pack',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to='game.questionpack'),
        ),
        migrations.AddField(
            model_name='game',
            name='team1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games_as_team1', to='game.team'),
        ),
        migrations.AddField(
            model_name='game',
            name='team2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games_as_team2', to='game.team'),
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.member')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.team')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('team_id', 'member_id', 'game_id'), name='team_member_uq')],
            },
        ),
    ]
